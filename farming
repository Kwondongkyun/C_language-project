#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main(void)
{
	int Array[5][5];
	double sum_array[4][4];

	srand((unsigned int)time(NULL));

	// 5 x 5 배열에 난수 대입 & 출력
	for (int i = 0; i < 5; i++)
	{
		for (int j = 0; j < 5; j++)
		{
			Array[i][j] = rand() % 10;
			printf("%3d ", Array[i][j]);
		}
		printf("\n");
	}
	printf("\n");

	int max_i = 0;
	int max_j = 0;
	double max_val = -1; // 최대값 저장 변수. 토양의 품질은 항상 0보다 크거나 같으므로 음수로 초기화

	// 5 x 5 땅에서 2 x 2 단위로 평균 값을 계산하며 최대값의 인덱스를 탐색
	// 2차원 배열이므로 인덱스 변수 2개를 사용
	// 5 x 5 땅에서 2 x 2 단위로 평균 값을 계산하면, 4 x 4 크기만큼 계산할 수 있음. 이에 맞게 for문 반복수 결정 (5 - 1)
	for (int i = 0; i < 5 - 1; i++)
	{
		for (int j = 0; j < 5 - 1; j++)
		{
			sum_array[i][j] = (Array[i][j] + Array[i][j + 1] + Array[i + 1][j + 1] + Array[i + 1][j])/4.0;
			printf("%.1lf   ", sum_array[i][j]);
			if (max_val < sum_array[i][j])
			{
				max_i = i;
				max_j = j;
				max_val = sum_array[i][j];
			}
		}
		printf("\n");
	}
	printf("\n");

	printf("가장 좋은 땅은 (%d, %d), (%d, %d), (%d, %d), (%d, %d) 입니다\n\n", max_i, max_j, max_i, max_j + 1, max_i + 1, max_j, max_i + 1, max_j + 1);


	return 0;
}
